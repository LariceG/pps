<?php
defined('BASEPATH') OR exit('No direct script access allowed');

/*
| -------------------------------------------------------------------------
| URI ROUTING
| -------------------------------------------------------------------------
| This file lets you re-map URI requests to specific controller functions.
|
| Typically there is a one-to-one relationship between a URL string
| and its corresponding controller class/method. The segments in a
| URL normally follow this pattern:
|
|	example.com/class/method/id/
|
| In some instances, however, you may want to remap this relationship
| so that a different class/function is called than the one
| corresponding to the URL.
|
| Please see the user guide for complete details:
|
|	https://codeigniter.com/user_guide/general/routing.html
|
| -------------------------------------------------------------------------
| RESERVED ROUTES
| -------------------------------------------------------------------------
|
| There are three reserved routes:
|
|	$route['default_controller'] = 'welcome';
|
| This route indicates which controller class should be loaded if the
| URI contains no data. In the above example, the "welcome" class
| would be loaded.
|
|	$route['404_override'] = 'errors/page_missing';
|
| This route will tell the Router which controller/method to use if those
| provided in the URL cannot be matched to a valid route.
|
|	$route['translate_uri_dashes'] = FALSE;
|
| This is not exactly a route, but allows you to automatically route
| controller and method names that contain dashes. '-' isn't a valid
| class or method name character, so it requires translation.
| When you set this option to TRUE, it will replace ALL dashes in the
| controller and method URI segments.
|
| Examples:	my-controller/index	-> my_controller/index
|		my-controller/my-method	-> my_controller/my_method
*/
$route['default_controller'] = 'welcome';
$route['404_override'] = '';
$route['translate_uri_dashes'] = FALSE;

$route["login"]          				= "WebServices/login";
$route["addStoreUser"]   				= "WebServices/addStoreUser";
$route["updateStoreUserDetail"]   		= "WebServices/updateStoreUserDetail";
$route["activeUserStatus"]   			= "WebServices/activeUserStatus";
$route["storeUserListing/(:any)/(:any)/(:any)/(:any)"]   		= "WebServices/storeUserListing/$1/$2/$3/$4";
$route["storeDetails/(:any)/(:any)"] 	= "WebServices/storeDetails/$1/$2";
$route["logout/(:any)"]  				= "WebServices/logout/ApiKey/$1";

$route["insert"]   						= "WebServices/insert";
$route["delete/(:any)/(:any)/(:any)/(:any)"]   		= "WebServices/Delete/$1/$2/$3/$4";
$route["get/(:any)"]   					= "WebServices/getMethod/type/$1";
$route["get-where/(:any)/(:any)/(:any)/(:any)"]   					= "WebServices/getWhere/$1/$2/$3/$4";
$route["update"]   						= "WebServices/update";


$route["addApdmUser"]   				= "WebServices/addApdmUser";
$route["updateApdmUserDetail"]   		= "WebServices/updateApdmUserDetail";
$route["activeUserStatus"]   			= "WebServices/activeUserStatus";
$route["apdmUserListing"]   			= "WebServices/apdmUserListing";
$route["apdmUserListing/(:any)"]   		= "WebServices/apdmUserListing/page/$1";
$route["apdmUserListing/(:any)/(:any)"] = "WebServices/apdmUserListing/page/$1/perpage/$2";
$route["apdmDetails/(:any)"] 			= "WebServices/apdmDetails/apdmID/$1";

$route["upload-image"]   				= "WebServices/uploadImage";
$route["submit-cat"]   					= "WebServices/submitCat";

$route["getCats/(:any)"]   		   		= "WebServices/getCats/parentCat/$1";
$route["get-cat"]   					= "WebServices/getCatss";

$route["submit-product"]   				= "WebServices/saveProducts";

$route["productListing"]   				= "WebServices/productListing";
// get-products
// $route["productListing/(:any)"]   		= "WebServices/productListing/page/$1";
// $route["productListing/(:any)/(:any)"] 	= "WebServices/productListing/page/$1/perpage/$2";
// $route["productListing/(:any)/(:any)/(:any)"] 	= "WebServices/productListing/page/$1/perpage/$2/catID/$3";
